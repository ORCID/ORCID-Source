<?xml version="1.0" encoding="UTF-8"?>
<!--
    =============================================================================
    ORCID (R) Open Source
    http://orcid.org
    Copyright (c) 2012-2014 ORCID, Inc.
    Licensed under an MIT-Style License (MIT)
    http://orcid.org/open-source-license
    This copyright and license information (including a link to the full license)
    shall be included in its entirety in all copies or substantial portion of
    the software.
    =============================================================================
-->
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <display-name>ORCID - Tier 1 API</display-name>

    <!-- Initialise Spring when we start up -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <!-- Tell Spring where to find the context file -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:/orcid-t1-web-context.xml
        </param-value>
    </context-param>
    
    <context-param>
        <param-name>log4jExposeWebAppRoot</param-name>
        <param-value>false</param-value>
    </context-param>

	<filter>
        <filter-name>acceptFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>acceptFilter</filter-name>
        <url-pattern>*</url-pattern>
    </filter-mapping>

	<filter>
		<filter-name>sanitizeAuthenticationFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>sanitizeAuthenticationFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>putAuthTokenActionFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>putAuthTokenActionFilter</filter-name>
		<url-pattern>/oauth/token</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>jsonpCallbackFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>jsonpCallbackFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>

	<filter>
        <filter-name>pubDefaultApiVersionFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>pubDefaultApiVersionFilter</filter-name>
        <url-pattern>*</url-pattern>
    </filter-mapping>

	<filter>
        <filter-name>apiVersionFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>apiVersionFilter</filter-name>
        <url-pattern>*</url-pattern>
    </filter-mapping>

	<filter>
		<filter-name>corsFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>corsFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>

    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>clientCredentialsTokenEndpointFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>clientCredentialsTokenEndpointFilter</filter-name>
        <url-pattern>/oauth/token</url-pattern>
    </filter-mapping>
    
    <filter>
        <filter-name>rateLimitingFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    
    <filter-mapping>
        <filter-name>rateLimitingFilter</filter-name>
        <url-pattern>*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>clientIdAttributeFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    
    <filter-mapping>
        <filter-name>clientIdAttributeFilter</filter-name>
        <url-pattern>*</url-pattern>
    </filter-mapping>
    
 
    <filter>
	    <filter-name>jersey</filter-name>
	    <filter-class>org.glassfish.jersey.servlet.ServletContainer</filter-class>
	    <init-param>
	        <param-name>jersey.config.server.provider.packages</param-name>
	        <param-value>org.orcid.api.identifiers;org.orcid.api.publicV3.server;org.orcid.api.publicV2.server;org.orcid.api.common;org.orcid.api.lod;org.orcid.api.common.writer.rdf</param-value>
	    </init-param>
	    <init-param>
            <param-name>jersey.config.servlet.filter.staticContentRegex</param-name>
            <param-value>/static/.*</param-value>
         </init-param> 
   
		<init-param>
        	<param-name>jersey.config.server.wadl.disableWadl</param-name>
        	<param-value>true</param-value>
    	</init-param>
	</filter>
	<filter-mapping>
        <filter-name>jersey</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>   


</web-app>