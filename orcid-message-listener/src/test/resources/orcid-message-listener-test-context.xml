<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.3.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/data/mongo
		http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">
	
	<tx:annotation-driven />
	
    <context:property-placeholder location="classpath:orcid-message-listener-test.properties" />
	<context:component-scan base-package="org.orcid.listener" />
	<context:annotation-config />
	
	
	<!--SOLR -->
	<!-- Confusingly, the client is actually called a server -->
	<bean id="solrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer">
		<constructor-arg value="${org.orcid.persistence.solr.url}" />
		<property name="soTimeout" value="${org.orcid.listener.persistence.solr.socketTimeout}" />
		<property name="connectionTimeout" value="${org.orcid.persistence.solr.connectionTimeout}" />
		<property name="allowCompression" value="${org.orcid.persistence.solr.allowCompression}" />
		<property name="maxRetries" value="${org.orcid.persistence.solr.maxRetries}" />
		<property name="defaultMaxConnectionsPerHost" value="${org.orcid.persistence.solr.maxTotalConnections}" />
		<property name="maxTotalConnections" value="${org.orcid.persistence.solr.defaultMaxConnectionsPerHost}" />
		<property name="parser" ref="responseParser" />
	</bean>

	<bean name="responseParser" class="org.apache.solr.client.solrj.impl.XMLResponseParser"></bean>

	<!-- JMS Messaging -->
	<!-- enable the configuration of jms on annotations -->
	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${org.orcid.persistence.messaging.brokerURL}" />
	</bean>
	
	<!-- message processors -->
	<bean id="solrMessageProcessor" class="org.orcid.listener.solr.SolrMessageProcessor"/>
	<bean id="s3ActivitiesConsumer" class="org.orcid.listener.s3.S3ActivitiesConsumer"/>
	<bean id="s3SummaryConsumer" class="org.orcid.listener.s3.S3SummaryConsumer"/>
		
	<!-- message listeners -->
    <bean id="reindexSOLRListener" class="org.orcid.listener.BaseListener">
        <constructor-arg ref="solrMessageProcessor" />
    </bean>
    
    <bean id="updateSOLRListener" class="org.orcid.listener.BaseListener">
		<constructor-arg ref="solrMessageProcessor" />
    </bean>

    <bean id="reindexSummaryListener" class="org.orcid.listener.BaseListener">
        <constructor-arg ref="s3SummaryConsumer" />
    </bean>
    
    <bean id="updateSummaryListener" class="org.orcid.listener.BaseListener">
		<constructor-arg ref="s3SummaryConsumer" />
    </bean>
    
    <bean id="reindexActivitiesListener" class="org.orcid.listener.BaseListener">
        <constructor-arg ref="s3ActivitiesConsumer" />
    </bean>
    
    <bean id="updateActivitiesListener" class="org.orcid.listener.BaseListener">
		<constructor-arg ref="s3ActivitiesConsumer" />
    </bean>

	<!-- listener container (routing info) -->
	<jms:listener-container connection-factory="jmsConnectionFactory" acknowledge="transacted" destination-type="queue">
	       <jms:listener ref="reindexSOLRListener" destination="${org.orcid.persistence.messaging.reindex.solr}" concurrency="${org.orcid.persistence.messaging.reindex.solr.concurrency}" />
	       <jms:listener ref="updateSOLRListener" destination="${org.orcid.persistence.messaging.updated.solr}" concurrency="${org.orcid.persistence.messaging.updated.solr.concurrency}" />
	       <jms:listener ref="reindexSummaryListener" destination="${org.orcid.persistence.messaging.reindex.summary}" concurrency="${org.orcid.persistence.messaging.reindex.summary.concurrency}" />
	       <jms:listener ref="updateSummaryListener" destination="${org.orcid.persistence.messaging.updated.summary}" concurrency="${org.orcid.persistence.messaging.updated.summary.concurrency}" />
	       <jms:listener ref="reindexActivitiesListener" destination="${org.orcid.persistence.messaging.reindex.activity}" concurrency="${org.orcid.persistence.messaging.reindex.activity.concurrency}" />
	       <jms:listener ref="updateActivitiesListener" destination="${org.orcid.persistence.messaging.updated.activity}" concurrency="${org.orcid.persistence.messaging.updated.activity.concurrency}" />
	</jms:listener-container>
	
	<!-- Jersey client -->
    <bean id="jerseyClient" class="org.orcid.listener.jersey.OrcidJerseyClientHandler" factory-method="create">
        <constructor-arg value="${org.orcid.message-listener.development_mode:false}" />
        <constructor-arg ref="jerseyProperties" />
    </bean>

    <util:map id="jerseyProperties">
        <entry key="com.sun.jersey.client.apache4.config.ApacheHttpClient4Config.PROPERTY_CONNECTION_MANAGER"
               value-ref="multiThreadedConnectionManager"/>
    </util:map>

    <bean id="multiThreadedConnectionManager" class="org.apache.http.impl.conn.PoolingClientConnectionManager"/>
    
    <!-- Persistence -->
	<bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
        <property name="dataSource" ref="${org.orcid.message-listener.db.dataSource}" />
        <property name="changeLog" value="classpath:message-listener-db-master.xml" />
    </bean>
	
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform" value="${org.orcid.message-listener.db.dialect}" />
        <property name="showSql" value="${org.orcid.message-listener.db.showSql}" />
        <property name="generateDdl" value="${org.orcid.message-listener.db.generateDdl}" />
    </bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="liquibase">
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
        <property name="dataSource" ref="${org.orcid.message-listener.db.dataSource}" />
        <property name="persistenceUnitName" value="messageListener" />
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.generate_statistics" value="${org.orcid.message-listener.db.hibernateStatistics:false}" />    
            </map>
        </property>
    </bean>   
    
    <bean id="simpleDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${org.orcid.message-listener.db.class}" />
        <property name="jdbcUrl" value="${org.orcid.message-listener.db.url}" />
        <property name="user" value="${org.orcid.message-listener.db.username}" />
        <property name="password" value="${org.orcid.message-listener.db.password}" />        
    </bean>
        
    <bean id="mqEntityManagerFactory" class="org.orcid.listener.persistence.spring.OrcidEntityManagerFactory">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    
    <bean id="entityManager" factory-bean="&amp;mqEntityManagerFactory" factory-method="getObject" />
       
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>        
	
	<bean name="fongo" class="com.github.fakemongo.Fongo">
	    <constructor-arg value="InMemoryMongo" />
	</bean>
	<bean id="mongoClient" class="com.mongodb.MongoClient" factory-bean="fongo" factory-method="getMongo" />
		
</beans>