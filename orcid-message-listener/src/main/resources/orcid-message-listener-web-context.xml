<?xml version="1.0" encoding="UTF-8" ?>
<!--

    =============================================================================

    ORCID (R) Open Source
    http://orcid.org

    Copyright (c) 2012-2014 ORCID, Inc.
    Licensed under an MIT-Style License (MIT)
    http://orcid.org/open-source-license

    This copyright and license information (including a link to the full license)
    shall be included in its entirety in all copies or substantial portion of
    the software.

    =============================================================================

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">
	
    <context:property-placeholder location="${org.orcid.message-listener.properties}" />
	<context:component-scan base-package="org.orcid.listener" />

	<!--SOLR -->
	<!-- Confusingly, the client is actually called a server -->
	<bean id="solrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer">
		<constructor-arg value="${org.orcid.persistence.solr.url}" />
		<property name="soTimeout" value="${org.orcid.listener.persistence.solr.socketTimeout}" />
		<property name="connectionTimeout" value="${org.orcid.persistence.solr.connectionTimeout}" />
		<property name="allowCompression" value="${org.orcid.persistence.solr.allowCompression}" />
		<property name="maxRetries" value="${org.orcid.persistence.solr.maxRetries}" />
		<property name="defaultMaxConnectionsPerHost" value="${org.orcid.persistence.solr.maxTotalConnections}" />
		<property name="maxTotalConnections" value="${org.orcid.persistence.solr.defaultMaxConnectionsPerHost}" />
		<property name="parser" ref="responseParser" />
	</bean>

	<bean name="responseParser" class="org.apache.solr.client.solrj.impl.XMLResponseParser"></bean>

	<!-- JMS Messaging -->
	<!-- enable the configuration of jms on annotations -->
	<jms:annotation-driven />
	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${org.orcid.persistence.messaging.brokerURL}" />
	</bean>
	<bean id="cachingJmsConnectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory" ref="jmsConnectionFactory" />
	</bean>

	<!-- so we can listen to queues -->
	<bean id="jmsListenerContainerFactory" class="org.springframework.jms.config.DefaultJmsListenerContainerFactory">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="concurrency" value="1" />
		<!-- property name="concurrency" value="1-10"/ -->
	</bean>

	<!-- Default Destination Queue Definition -->
	<bean id="defaultJmsDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- name of the queue -->
		<constructor-arg index="0" value="test" />
	</bean>

	<!-- JmsTemplate Definition so we can send to queues -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="defaultDestination" ref="defaultJmsDestination" />
	</bean>
	
	<!-- Jersey client -->
	<bean id="jerseyClient" class="org.orcid.listener.jersey.OrcidJerseyClientHandler" factory-method="create">
        <constructor-arg ref="clientConfig"/>
        <constructor-arg value="${org.orcid.message-listener.development_mode:false}" />
    </bean>

	<util:map id="jerseyProperties">
        <entry key="com.sun.jersey.client.apache4.config.ApacheHttpClient4Config.PROPERTY_CONNECTION_MANAGER"
               value-ref="multiThreadedConnectionManager"/>
    </util:map>

	<bean id="multiThreadedConnectionManager" class="org.apache.http.impl.conn.PoolingClientConnectionManager"/>

    <bean id="clientConfig" class="org.orcid.util.OrcidJerseyClientConfig">
        <constructor-arg ref="providers"/>
        <property name="properties" ref="jerseyProperties"/>
        <property name="keyStore" ref="keyStore"/>
        <property name="keyStorePassword" value="${org.orcid.t2.client.keyStorePass:#{null}}"/>
        <property name="trustStore" ref="trustStore"/>
    </bean>
    
    <util:set id="providers">
        <value>com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider</value>        
    </util:set>
    
	<bean id="keyStore" class="org.orcid.util.KeyStoreFactoryBean">
        <property name="location" value="${org.orcid.t2.client.keyStoreLocation:#{null}}"/>
        <property name="password" value="${org.orcid.t2.client.keyStorePass:#{null}}"/>
    </bean>

    <bean id="trustStore" class="org.orcid.util.KeyStoreFactoryBean">
        <property name="location" value="${org.orcid.t2.client.trustStoreLocation:#{null}}"/>
        <property name="password" value="${org.orcid.t2.client.trustStorePass:#{null}}"/>
    </bean>
</beans>